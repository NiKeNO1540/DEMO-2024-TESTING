- name: Configure HQ-RTR Alt Server
  hosts: HQ-RTR
  become: true
  tasks:
    - name: Set hostname
      hostname:
        name: HQ-RTR

    - name: Create network interface directories
      file:
        path: /etc/net/ifaces/ens224
        state: directory
        mode: '0755'

    - name: Configure ens192 options
      blockinfile:
        path: /etc/net/ifaces/ens192/options
        create: true
        block: |
          TYPE=eth
          BOOTPROTO=static
          CONFIG_IPV4=yes
          DISABLED=no

    - name: Copy ens192 options to ens224
      copy:
        src: /etc/net/ifaces/ens192/options
        dest: /etc/net/ifaces/ens224/options
        remote_src: true

    - name: Set IP address for ens192
      lineinfile:
        path: /etc/net/ifaces/ens192/ipv4address
        line: "11.11.11.1/26"
        create: true

    - name: Change IP forwarding to true
      sysctl:
        path: /etc/net/sysctl.conf
        regexp: '^net.ipv4.ip_forward = 0'
        line: 'net.ipv4.ip_forward = 1'
      notify: Enable ipv4 forwarding

    - name: Configure DNS nameserver
      lineinfile:
        path: /etc/resolv.conf
        line: "nameserver 8.8.8.8"
        create: true

    - name: Restart network
      systemd:
        name: network
        state: restarted

    - name: Configure NAT
      iptables:
        table: nat
        chain: POSTROUTING
        out_interface: ens224
        source: 0.0.0.0/0
        jump: MASQUERADE
      notify: Save iptables and enable service

    - name: Install FRR
      ansible.builtin.package:
        name: frr
        state: present

    - name: Enable OSPF in FRR
      lineinfile:
        path: /etc/frr/daemons
        regexp: '^ospfd=no'
        line: 'ospfd=yes'
      notify: Restart FRR

    - name: Enable FRR
      systemd:
          name: frr
          enabled: yes
          state: started

    - name: Configure OSPF via vtysh
      command:
        cmd: "vtysh -c 'conf t' -c 'ip forwarding' -c 'router ospf' -c 'network 11.11.11.0/26 area 0' -c 'network 22.22.22.0/30 area 0' -c 'do wr' -c 'end' -c 'exit'"
      notify: Restart FRR

    - name: Install DHCP server
      ansible.builtin.package:
        name: dhcp-server
        state: present

    - name: Set DHCPDARGS
      lineinfile:
          path: /etc/sysconfig/dhcpd
          line: "DHCPDARGS=ens192"
          create: true

    - name: Configure DHCP server
      copy:
          src: /etc/dhcp/dhcpd.conf.sample
          dest: /etc/dhcp/dhcpd.conf
          remote_src: yes
          backup: yes
      notify: Restart dhcpd

    - name: add dhcpd config
      blockinfile:
        path: /etc/dhcp/dhcpd.conf
        block: |
          ddns-update-style none;

          subnet 11.11.11.0 netmask 255.255.255.192 {
              option routers 11.11.11.1;
              option subnet-mask 255.255.255.192;
              range dynamic-bootp 11.11.11.2 11.11.11.60;
              default-lease-time 21600;
              max-lease-time 43200;

              host HQ-SRV {
                  hardware ethernet 00:0C:29:0B:F2:1A;
                  fixed-address 11.11.11.2;
              }
          }
      notify: Restart dhcpd

    - name: Create network_admin user
      user:
        name: network_admin
        password: "{{ 'P@ssw0rd' | password_hash('sha512') }}"
        groups: root,wheel
        append: true

    - name: Install iperf3
      ansible.builtin.package:
        name: iperf3
        state: present

    - name: Configure SSH port forwarding
      ansible.builtin.iptables:
        table: nat
        chain: PREROUTING
        protocol: tcp
        destination_port: 2222
        destination: 11.11.11.2
        jump: DNAT
        to_destination: 11.11.11.2:22
      notify: Save iptables and enable service

    - name: Drop FORWARD to HQ-SRV:22 if not DNAT
      command:
          cmd: "iptables -A FORWARD -p tcp --dport 22 -d 11.11.11.2 -m conntrack ! --ctstate DNAT -j DROP"
      notify: Save iptables and enable service

    - name: Notification system to reboot
      shell: "echo Done!"
      notify: Reboot system

  handlers:
    - name: Save iptables and enable service
      shell: "iptables-save > /etc/sysconfig/iptables"
      listen: "Save iptables and enable service"
      changed_when: true

    - name: enable iptables
      systemd:
          name: iptables
          enabled: yes
          state: started
      listen: "Save iptables and enable service"

    - name: Restart FRR
      systemd:
        name: frr
        state: restarted
      listen: "Restart FRR"

    - name: Restart dhcpd
      systemd:
        name: dhcpd
        state: restarted
        enabled: yes
      listen: "Restart dhcpd"

    - name: Restart sysctl
      command:
        cmd: "sysctl -p"
      listen: "Enable ipv4 forwarding"

    - name: Reboot the system
      reboot:
        msg: "Rebooting system to apply changes"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      listen: "Reboot system"
